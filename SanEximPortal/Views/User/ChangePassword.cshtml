@using SanEximPortal.ViewModels
@model UserPasswordChangeViewModel
@{
    ViewData["Title"] = "Şifre Değiştirme";
    Layout = "~/Views/Shared/_DevExtremeLayout.cshtml";
}
<script>
    function onCheckedShowHidePasswordChanged(data) {
        console.log("onCheckedShowHidePasswordChanged");
         var form = $("#changePasswordForm").dxForm("instance")
         
        var passwordEditor = $("#changedPassword").dxTextBox("instance");
        var passwordConfirmEditor = $("#changedPasswordConfirm").dxTextBox("instance");
        passwordEditor.option("mode", passwordEditor.option("mode") === "text" ? "password" : "text");
        passwordConfirmEditor.option("mode", passwordConfirmEditor.option("mode") === "text" ? "password" : "text");
        //if (data.value) {
        //    console.log("Göster");
        //    //form.itemOption("ChangedPassword", "visible", e.value);
        //} else{
        //    console.log("Gizle");
        //}
}
</script>
<h1>Şifre Değiştirme</h1>
@using (Html.BeginForm())
{
    using (Html.DevExtreme().ValidationGroup())
    {
        @Html.AntiForgeryToken()

        @(Html.DevExtreme().Form<UserPasswordChangeViewModel>()
        .ID("changePasswordForm")
        .ColCount(6)
        .LabelMode(FormLabelMode.Floating)

        .Items(items=>{
            items.AddSimpleFor(m=>m.Id)
                 .Editor(e => e
                            .TextBox()
                            .Visible(false)
                            .Width("100%")
                        );  items.AddEmpty().ColSpan(5);
            items.AddSimpleFor(m=>m.Email)
                .Editor(e => e
                        .TextBox()
                        .ReadOnly(true)
                        .Width("100%")
                    ); items.AddEmpty().ColSpan(5);
            items.AddSimpleFor(m=>m.Password).Editor(ed => ed.TextBox().Mode(TextBoxMode.Password));  items.AddEmpty().ColSpan(5);


            items.AddSimpleFor(m=>m.ChangedPassword)
            .Editor(ed => ed.TextBox()
                .Mode(TextBoxMode.Password)
                .ID("changedPassword")
                .Buttons(buttons => {
                    buttons.Add()
                        .Name("password")
                        .Location(TextEditorButtonLocation.After)
                        .Widget(w => w.Button()
                            .Type(ButtonType.Default)
                            .Icon("isblank")
                            //.Icon(Url.Content("~/images/icons/eye.png"))
                            .OnClick("onCheckedShowHidePasswordChanged"));
                })
            );
            items.AddEmpty().ColSpan(5);

           @* items.AddSimple()
                .Editor(ch=>ch.CheckBox()
                    .Name("chkShowHidePassword")
                    .Text("Şifre Göster/Gizle")
                    .OnValueChanged("onCheckedShowHidePasswordChanged")
                    .Value(false)
                );*@


            items.AddSimpleFor(m=>m.ChangedPasswordConfirm)
            .Editor(ed => ed.TextBox()
                .Mode(TextBoxMode.Password)
                .ID("changedPasswordConfirm")
            );  items.AddEmpty().ColSpan(5);





            items.AddButton()
                .HorizontalAlignment(HorizontalAlignment.Left)
                .ButtonOptions(b=>{
                    b.Icon("check")
                     //.OnClick("receiveExportData")
                     .UseSubmitBehavior(true)
                     .Text("Şifre Değişir");
                     
                });
            }).FormData(Model))
    }

}

@*
@(Html.DevExtreme().Form<UserPasswordChangeViewModel>()
    .ID("changePasswordForm")
    .ColCount(6)
    .Items(items=>{
        items.AddSimpleFor(m=>m.Id).Visible(false);
        items.AddSimpleFor(m=>m.Email)
            .Editor(e => e
                    .TextBox()
                    .Disabled(true)
                    .Width("100%")
                ); items.AddEmpty().ColSpan(5);
        items.AddSimpleFor(m=>m.Password).Editor(ed => ed.TextBox().Mode(TextBoxMode.Password));  items.AddEmpty().ColSpan(5);
        items.AddSimpleFor(m=>m.ChangedPassword).Editor(ed => ed.TextBox().Mode(TextBoxMode.Password));  items.AddEmpty().ColSpan(5);
        items.AddSimpleFor(m=>m.ChangedPasswordConfirm).Editor(ed => ed.TextBox().Mode(TextBoxMode.Password));  items.AddEmpty().ColSpan(5);
        items.AddButton()
            .HorizontalAlignment(HorizontalAlignment.Left)
            .ButtonOptions(b=>{
                b.Icon("check")
                 .Text("Şifre Değişir");
                 //.OnClick("receiveExportData");
            });
        }).FormData(Model))*@